HADOOP EX 1

INPUT: 
	- path to document "historical_stock_prices.csv".
	- path for output result.

PRE-COND:
	- path to historical_stock_prices.csv needs to be valid.
	- historical_stock_prices.csv needs to be a document, separated by commas, with 8 fields:
		- TICKER		String		unique share symbol
		- OPEN			Float		open price
		- CLOSE 		Float		close price
		- ADJ_CLOSE 	Float		adjusted close price
		- LOW 			Float		min price
		- HIGH 			Float		max price
		- VOLUME 		Long		number of transactions
		- DATE			Date 		date in format yyyy-mm-dd
	- output path needs to be valid.

POST-COND:
	- output file needs to be a document, separated by commas, with 5 fields:
		- TICKER				String					
		- DELTA_QUOTATION_%		String  (Integer with %)	percentage change rounded of ticker value in period 2008-2018
		- MIN_CLOSE				Float   min "close" value reported in period 2008-2018
		- MAX_CLOSE				Float   max "close" value reported in period 2008-2018
		- AVG_VOLUME			Long    average "volume" in period 2008-2018
	- document rows need to be sorted by descending "DELTA_QUOTATION_%" 


ex1Mapper(key, value)
		skip first row 											//header
		check_correctness_data(value)							//correct types 
		close,volume,date <- extractRelevantValues(value)		//relevant values are "close","volume","date"
		key <- extractTicker(value)
		
		if (2008 <= date.year() && date.year() <= 2018):
			EMIT(Text ticker, Text [close, volume, date])


ex1Reducer(key, values)
		initialize firstClose, lastClose, firstDate, lastDate, 
				   minClose, maxClose, sumVolumes, numValues

		for each text in values:
			update firstClose, lastClose, firstDate, lastDate, 
			   	   minClose, maxClose, sumVolumes, numValues
			if(text.date < firstDate)
				firstDate = text.date
				firstClose = text.close
			if(text.date > lastDate)
				lastDate = text.date
				lastClose = text.close
			if(text.close < minClose)
				minClose = close
			if(text.close > maxClose)
				maxClose = close
			sumVolumes += text.volume
			numValues++

		deltaQuotation = ((lastClose - firstClose) / firstClose) * 100
		avgVolume = sumVolumes / numValues
		
		EMIT(Text "ticker", Text [deltaQuotation,minClose,maxClose,avgVolume])
		
		
